//
//  Localizable.strings
//  DronelinkUI
//
//  Created by Jim McAndrew on 1/21/19.
//  Copyright Â© 2019 Dronelink. All rights reserved.
//
"dismiss" = "Dismiss";
"continue" = "Continue";
"cancel" = "Cancel";

"MissionDisengageReason.user.disengaged" = "Mission Paused";

"MissionViewController.timeElapsed.empty" = "--:--";
"MissionViewController.start.countdown" = "Starting in %d";
"MissionViewController.start.countdown" = "Starting in %d";
"MissionViewController.start.engaging" = "Preparing to execute...";
"MissionViewController.start.cancelled" = "Countdown Stopped";
"MissionViewController.start.takeoffLocationWarning.title" = "Confirm Takeoff Location";
"MissionViewController.start.takeoffLocationWarning.message.device.altitude.available" = "The current takeoff location is %@ from the planned takeoff location, which may cause the drone to fly at an unsafe offset from the planned altitudes. The GPS altitude of this device (%@) will be used to adjust any AGL and MSL altitudes automatically.";
"MissionViewController.start.takeoffLocationWarning.message.device.altitude.unavailable" = "The current takeoff location is %@ from the planned takeoff location, which may cause the drone to fly at an unsafe offset from the planned altitudes.";
"MissionViewController.start.engage.droneSerialNumberUnavailable.title" = "Unidentified Drone";
"MissionViewController.start.engage.droneSerialNumberUnavailable.message" = "Unable to determine the serial number of your drone. Try reconnecting or power-cycling.";

"TelemetryViewController.distance.prefix" = "D";
"TelemetryViewController.altitude.prefix" = "A";
"TelemetryViewController.horizontalSpeed.prefix" = "H/S";
"TelemetryViewController.verticalSpeed.prefix" = "V/S";
"TelemetryViewController.unit.distance.metric" = "m";
"TelemetryViewController.unit.distance.imperial" = "ft";
"TelemetryViewController.unit.horizontalSpeed.metric" = "km/h";
"TelemetryViewController.unit.horizontalSpeed.imperial" = "mph";
"TelemetryViewController.unit.verticalSpeed.metric" = "m/s";
"TelemetryViewController.unit.verticalSpeed.imperial" = "fps";
